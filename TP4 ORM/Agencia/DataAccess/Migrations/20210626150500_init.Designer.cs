// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210626150500_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Agencia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("cabaniaid")
                        .HasColumnType("int");

                    b.Property<int>("cantAlojamientos")
                        .HasColumnType("int");

                    b.Property<int?>("hotelid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("cabaniaid");

                    b.HasIndex("hotelid");

                    b.ToTable("Agencia");
                });

            modelBuilder.Entity("Entities.AgenciaManager", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("agenciaid")
                        .HasColumnType("int");

                    b.Property<int?>("reservaid")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("agenciaid");

                    b.HasIndex("reservaid");

                    b.HasIndex("usuarioid");

                    b.ToTable("AgenciaManager");
                });

            modelBuilder.Entity("Entities.Cabania", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("barrio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cantidadDeBanios")
                        .HasColumnType("int");

                    b.Property<int>("cantidadDePersonas")
                        .HasColumnType("int");

                    b.Property<int?>("ciudadid")
                        .HasColumnType("int");

                    b.Property<string>("estrellas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("habitaciones")
                        .HasColumnType("float");

                    b.Property<double>("precio_por_dia")
                        .HasColumnType("float");

                    b.Property<bool>("reservado")
                        .HasColumnType("bit");

                    b.Property<bool>("tv")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("ciudadid");

                    b.ToTable("Cabania");
                });

            modelBuilder.Entity("Entities.Ciudades", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Ciudades");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nombre = "buenos aires"
                        },
                        new
                        {
                            id = 2,
                            nombre = "rio negro"
                        },
                        new
                        {
                            id = 3,
                            nombre = "la plata"
                        },
                        new
                        {
                            id = 4,
                            nombre = "bariloche"
                        },
                        new
                        {
                            id = 5,
                            nombre = "lujan"
                        });
                });

            modelBuilder.Entity("Entities.Hotel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("barrio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cantidadDePersonas")
                        .HasColumnType("int");

                    b.Property<int?>("ciudadid")
                        .HasColumnType("int");

                    b.Property<string>("estrellas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precio_por_persona")
                        .HasColumnType("float");

                    b.Property<bool>("reservado")
                        .HasColumnType("bit");

                    b.Property<bool>("tv")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("ciudadid");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("Entities.Reserva", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FHasta")
                        .HasColumnType("datetime2");

                    b.Property<int>("contador")
                        .HasColumnType("int");

                    b.Property<float>("precio")
                        .HasColumnType("real");

                    b.Property<int?>("tipoAlojamientoid")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("tipoAlojamientoid");

                    b.HasIndex("usuarioid");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("Entities.TipoAlojamiento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TipoAlojamiento");
                });

            modelBuilder.Entity("Entities.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<bool>("bloqueado")
                        .HasColumnType("bit");

                    b.Property<bool>("esAdmin")
                        .HasColumnType("bit");

                    b.Property<int>("intentosLogueo")
                        .HasColumnType("int");

                    b.Property<string>("mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pass")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            id = 1,
                            DNI = 101010,
                            bloqueado = false,
                            esAdmin = true,
                            intentosLogueo = 0,
                            mail = "soporte@gmail.com",
                            nombre = "admin",
                            pass = "123"
                        },
                        new
                        {
                            id = 2,
                            DNI = 54594166,
                            bloqueado = false,
                            esAdmin = false,
                            intentosLogueo = 0,
                            mail = "soporte@gmail.com",
                            nombre = "gianpool",
                            pass = "123"
                        });
                });

            modelBuilder.Entity("Entities.Agencia", b =>
                {
                    b.HasOne("Entities.Cabania", "cabania")
                        .WithMany()
                        .HasForeignKey("cabaniaid");

                    b.HasOne("Entities.Hotel", "hotel")
                        .WithMany()
                        .HasForeignKey("hotelid");

                    b.Navigation("cabania");

                    b.Navigation("hotel");
                });

            modelBuilder.Entity("Entities.AgenciaManager", b =>
                {
                    b.HasOne("Entities.Agencia", "agencia")
                        .WithMany()
                        .HasForeignKey("agenciaid");

                    b.HasOne("Entities.Reserva", "reserva")
                        .WithMany()
                        .HasForeignKey("reservaid");

                    b.HasOne("Entities.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioid");

                    b.Navigation("agencia");

                    b.Navigation("reserva");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Entities.Cabania", b =>
                {
                    b.HasOne("Entities.Ciudades", "ciudad")
                        .WithMany()
                        .HasForeignKey("ciudadid");

                    b.Navigation("ciudad");
                });

            modelBuilder.Entity("Entities.Hotel", b =>
                {
                    b.HasOne("Entities.Ciudades", "ciudad")
                        .WithMany()
                        .HasForeignKey("ciudadid");

                    b.Navigation("ciudad");
                });

            modelBuilder.Entity("Entities.Reserva", b =>
                {
                    b.HasOne("Entities.TipoAlojamiento", "tipoAlojamiento")
                        .WithMany()
                        .HasForeignKey("tipoAlojamientoid");

                    b.HasOne("Entities.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioid");

                    b.Navigation("tipoAlojamiento");

                    b.Navigation("usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
